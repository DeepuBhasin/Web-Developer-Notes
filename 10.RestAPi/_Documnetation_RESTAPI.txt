
1. Mainly use is in Api (application program interface)
	
	andriod App + website + iphone App  + MYsql (want to show similar data on these three platform then we use api with json fromat) 

2. Web services API
	 They always use HTTP protocol hence always pass URL

	 1. Soap
	 2. XML-RPC		(simple api and not secure)
	 3. JSON-RPC	(simple api and not secure)
	 4. REST		(most Popular among all)

3. HTTP Methods : 
	GET and POST (learn in PHP)

	1. GET 		 ---->	        to read Data 
	2. PUT/Patch ---->  		Update data
	3. POST 	 ---->			Create/insert 
	4. DELETE 	 ---->			Delete	


4. What is Rest API 
	a. Representational State Transfer which support format text JSON, XML, text ,user-defined. It is very Use 
	b. its also called Rest Full api 

	Soap only support XML format 


5. Restful api with PHP
		when we use php we have some addition infromation called header infromation 

			header('Content-type:application/json');				// means response is in json format and  compulsory
			header('Access-Control-Allow-Methods:Put,DELETE');				// declraing HTTP method  and optional
			
			header('Access-Control-Allow-Origin:*');					// give access to all sites andn optional
					or
			header('Access-Control-Allow-Origin:www.site-b.com');		// give access only to site-b.com and optional				

			header('Access-Control-Allow-Header:<header-name>')			// deifned which type of header can use and optional 


example : header('Access-control-Allow-Headers:Content-Type,Access-Control-Allow-Origin,Access-control-Allow-Method,Authorization,X-Requested-With');

		Authorization    : only authorize person can access this page 
		X-Requested-With : means data only accepted using Ajax only 	
=======================================================================================================================================================
GET
	 the GET method is used to retrieve whatever information is identified by the Request-URL.Parameters in this method are saved in the browser’s history.	Parameters are not archived in the browser history or other web server logs.Information is visible to everyone in the URL

HEAD
	
	 The HEAD technique requests a reaction that is similar to that of GET request, but doesn’t have a message-body in the response. 

POST 
	
	In web communication, POST requests are utilized to send data to a server to create or update a resource.One example is when a user uploads a profile photo.
	Parameters are not archived in the browser history or other web server logs

PUT
	PUT is similar to POST as it is used to send data to the server to create or update a resource. It is idempotent, meaning that putting a resource twice will have no effect This means that if you call the same PUT requests multiple times, the results will always be the same	

DELETE
Just as it sounds, the DELETE request method is used to delete resources indicated by a specific URL. Making a DELETE request will remove the targeted resource.


PATCH
A PATCH request is similar to POST and PUT. However, its primary purpose is to apply partial modifications to the resource. And just like a POST request, the PATCH request is also non-idempotent. Additionally, unlike POST and PUT which require a full user entity, with PATCH requests, you may only send the updated username.

CONNECT
The CONNECT request method is used by the client to create a network connection to a web server over a particular HTTP			
		

