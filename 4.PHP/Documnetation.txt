=================================================
example of oops 
types of in heritence 
1. Single 
2. Multiple   (multiple class merging into one single class)
3. Multilevel (when one class extends the other class and this class further becomes the parent of third class and so on. )
4. Diamond    (it is basically a combination of hierarchical and multiple inheritance. )
5. Hierarchical ( When one class becomes parent of many child classes. This makes a tree like structure.)
6. Hybrid     (this is a combination of any type of inheritance.)

==========================================================
1. PHP - Interfaces vs. Abstract Classes

Interface are similar to abstract classes. The difference between interfaces and abstract classes are:

1. Interfaces cannot have properties, while abstract classes can
2. All interface methods must be public, while abstract class methods is public or protected
3. All methods in an interface are abstract, so they cannot be implemented in code and the abstract keyword is not necessary
4. Classes can implement an interface while inheriting from another class at the same time

=======================================================================================================================================================
2. What is the use of header() function in PHP?
The header() function is used to send a raw HTTP header to a client. It must be called before sending the actual output. For example, you can't print any HTML element before using this function.

======================================================================================================================================================
3 Explain some of the PHP array functions?
There are many array functions in PHP:

array()
array_change_key_case()
array_chunk()
count()
sort()
array_reverse()
array_search()
array_intersect()

=======================================================================================================================
4. Explain some of the PHP string functions?
There are many array functions in PHP:

strtolower()
strtoupper()
ucfirst()
lcfirst()
ucwords()
strrev()
strlen()

========================================================================================================================
5. What is a session?

Sessions generally store temporary data to allow multiple PHP pages to offer a complete functional transaction for the same user.
Simply, it maintains data of an user (browser).

What is $_SESSION in PHP?
A session creates a file in a temporary directory on the server where registered session variables and their session id are stored. This data will be available to all pages on the site amid that visit.

The area of the temporary record is controlled by a setting in the php.ini document called session.save_path.

At the point when a session is begun following things happen -

PHP first makes two duplicates of one of a kind session id for that particular session of the client which is an arbitrary string of 32 hexadecimal numbers, for example, 3c7foj34c3jjhkyepop2fc937e3443.
One copy of unique session id automatically sent to the user?s computer for the sake of synchronization in future ahead, and one copy is being maintained at server side till the session is running.
Whenever you want to access the page of website or web app, then session id of the current user will be associated with the HTTP header, and that will be compared by the session id which is being maintained at the server. After completing the comparison process, you can easily access the page of the website or web app
A session ends when the user closes the browser, or after leaving the site, the server will terminate the session after a predetermined period, commonly 30 minutes duration.

==========================================================================
<?php
try {
    $var_msg = "This is an exception example";
    throw new Exception($var_msg);
}
catch (Exception $e) {
    echo "Message: " . $e->getMessage();
    echo "";
    echo "getCode(): " . $e->getCode();
    echo "";
    echo "__toString(): " . $e->__toString();
}
?>

===============================================

